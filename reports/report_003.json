{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-05-06T12:59:36.273Z",
    "end": "2025-05-06T12:59:47.835Z",
    "duration": 11562,
    "testsRegistered": 4,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 2,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "4f8b73e2-7173-4995-8153-188d6dc33c18",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0fb39a5f-16b7-4466-bc03-89b42298177a",
          "title": "Checkout Process",
          "fullFile": "C:\\Users\\DELL\\Downloads\\sof\\test\\specs\\checkout.test.js",
          "file": "\\test\\specs\\checkout.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should add item to cart\"",
              "fullTitle": "Checkout Process \"before all\" hook for \"should add item to cart\"",
              "timedOut": true,
              "duration": 5021,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "driver = await getDriver();\nloginPage = new LoginPage(driver);\ninventoryPage = new InventoryPage(driver);\ncartPage = new CartPage(driver);\nawait loginPage.open();\nawait loginPage.login('standard_user', 'secret_sauce');",
              "err": {
                "message": "Error: Timeout of 5000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\DELL\\Downloads\\sof\\test\\specs\\checkout.test.js)",
                "estack": "Error: Timeout of 5000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\DELL\\Downloads\\sof\\test\\specs\\checkout.test.js)\n    at listOnTimeout (node:internal/timers:608:17)\n    at process.processTimers (node:internal/timers:543:7)",
                "diff": null
              },
              "uuid": "5949961b-3488-46e8-ad37-a4ee8b8a9027",
              "parentUUID": "0fb39a5f-16b7-4466-bc03-89b42298177a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Checkout Process\"",
              "fullTitle": "Checkout Process \"after all\" hook in \"Checkout Process\"",
              "timedOut": false,
              "duration": 319,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "46b003e4-4ed2-47e4-a7dd-35b734b53a09",
              "parentUUID": "0fb39a5f-16b7-4466-bc03-89b42298177a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Checkout Process \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.currentTest.state === 'failed') {\n  await takeScreenshot(driver, this.currentTest.title.replace(/\\s+/g, '_'));\n}",
              "err": {},
              "uuid": "cd4c1652-5d74-4a7e-8efd-3cbd66f6ea42",
              "parentUUID": "0fb39a5f-16b7-4466-bc03-89b42298177a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should add item to cart",
              "fullTitle": "Checkout Process should add item to cart",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventoryPage.addFirstItemToCart();\nconst badge = await driver.findElement(By.css('.shopping_cart_badge')).getText();\nassert.equal(badge, '1');",
              "err": {},
              "uuid": "6e2c2b28-43e0-4300-a610-72d3886c013f",
              "parentUUID": "0fb39a5f-16b7-4466-bc03-89b42298177a",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should proceed to checkout",
              "fullTitle": "Checkout Process should proceed to checkout",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventoryPage.openCart();\nawait cartPage.proceedToCheckout();\nconst url = await driver.getCurrentUrl();\nassert.include(url, 'checkout-step-one.html');",
              "err": {},
              "uuid": "b303a481-10a8-47a6-82c8-8baebbc634f4",
              "parentUUID": "0fb39a5f-16b7-4466-bc03-89b42298177a",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "6e2c2b28-43e0-4300-a610-72d3886c013f",
            "b303a481-10a8-47a6-82c8-8baebbc634f4"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "0511a649-4fcd-4a16-bbac-4f441547b260",
          "title": "SauceDemo Login Tests",
          "fullFile": "C:\\Users\\DELL\\Downloads\\sof\\test\\specs\\login.test.js",
          "file": "\\test\\specs\\login.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"SauceDemo Login Tests\"",
              "fullTitle": "SauceDemo Login Tests \"before all\" hook in \"SauceDemo Login Tests\"",
              "timedOut": false,
              "duration": 2148,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await getDriver();\nloginPage = new LoginPage(driver);",
              "err": {},
              "uuid": "9d331e55-2c93-4c22-9627-a72add3bee27",
              "parentUUID": "0511a649-4fcd-4a16-bbac-4f441547b260",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"SauceDemo Login Tests\"",
              "fullTitle": "SauceDemo Login Tests \"after all\" hook in \"SauceDemo Login Tests\"",
              "timedOut": false,
              "duration": 207,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "9dd0dd90-3a54-4fc9-9a13-31536b6ca920",
              "parentUUID": "0511a649-4fcd-4a16-bbac-4f441547b260",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"SauceDemo Login Tests\"",
              "fullTitle": "SauceDemo Login Tests \"after each\" hook in \"SauceDemo Login Tests\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.currentTest.state === 'failed') {\n  await takeScreenshot(driver, this.currentTest.title.replace(/\\s+/g, '_'));\n}",
              "err": {},
              "uuid": "b12d30c0-0875-4acd-90e6-3b300b8f20cd",
              "parentUUID": "0511a649-4fcd-4a16-bbac-4f441547b260",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should login with valid credentials",
              "fullTitle": "SauceDemo Login Tests should login with valid credentials",
              "timedOut": false,
              "duration": 2995,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.open();\nawait loginPage.login('standard_user', 'secret_sauce');\nconst url = await driver.getCurrentUrl();\nassert.include(url, 'inventory.html');",
              "err": {},
              "uuid": "733c19fd-9270-45ac-a0ef-545c6c22ec26",
              "parentUUID": "0511a649-4fcd-4a16-bbac-4f441547b260",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error with invalid credentials",
              "fullTitle": "SauceDemo Login Tests should show error with invalid credentials",
              "timedOut": false,
              "duration": 846,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.open();\nawait loginPage.login('invalid_user', 'wrong_pass');\nconst errorText = await loginPage.getErrorMessage();\nassert.include(errorText.toLowerCase(), 'epic sadface');",
              "err": {},
              "uuid": "df5e0565-9805-4d6e-afa0-fb285e54df11",
              "parentUUID": "0511a649-4fcd-4a16-bbac-4f441547b260",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "733c19fd-9270-45ac-a0ef-545c6c22ec26",
            "df5e0565-9805-4d6e-afa0-fb285e54df11"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3841,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "report",
        "quiet": "true",
        "overwrite": "false",
        "html": "false",
        "json": "true"
      },
      "version": "6.2.0"
    }
  }
}