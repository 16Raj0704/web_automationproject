{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2025-05-06T12:57:50.655Z",
    "end": "2025-05-06T12:57:59.660Z",
    "duration": 9005,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "67a2e575-6d9a-49ef-8cd5-be020a72991f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9b2ab84a-4e52-4ea4-8456-cdb72369d3ba",
          "title": "Checkout Process",
          "fullFile": "C:\\Users\\DELL\\Downloads\\sof\\test\\specs\\checkout.test.js",
          "file": "\\test\\specs\\checkout.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Checkout Process\"",
              "fullTitle": "Checkout Process \"before all\" hook in \"Checkout Process\"",
              "timedOut": false,
              "duration": 4944,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await getDriver();\nloginPage = new LoginPage(driver);\ninventoryPage = new InventoryPage(driver);\ncartPage = new CartPage(driver);\nawait loginPage.open();\nawait loginPage.login('standard_user', 'secret_sauce');",
              "err": {},
              "uuid": "29a98a13-d1f9-41e2-becd-a5716cfdd2c8",
              "parentUUID": "9b2ab84a-4e52-4ea4-8456-cdb72369d3ba",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Checkout Process\"",
              "fullTitle": "Checkout Process \"after all\" hook in \"Checkout Process\"",
              "timedOut": false,
              "duration": 57,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "9304da0a-d507-445a-8a78-ca046d39c61f",
              "parentUUID": "9b2ab84a-4e52-4ea4-8456-cdb72369d3ba",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Checkout Process\"",
              "fullTitle": "Checkout Process \"after each\" hook in \"Checkout Process\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.currentTest.state === 'failed') {\n  await takeScreenshot(driver, this.currentTest.title.replace(/\\s+/g, '_'));\n}",
              "err": {},
              "uuid": "047f8929-610f-424b-9ef7-314276479300",
              "parentUUID": "9b2ab84a-4e52-4ea4-8456-cdb72369d3ba",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should add item to cart",
              "fullTitle": "Checkout Process should add item to cart",
              "timedOut": false,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventoryPage.addFirstItemToCart();\nconst badge = await driver.findElement(By.css('.shopping_cart_badge')).getText();\nassert.equal(badge, '1');",
              "err": {},
              "uuid": "ef2c1bfc-7fad-4836-a7ed-4e51af593a19",
              "parentUUID": "9b2ab84a-4e52-4ea4-8456-cdb72369d3ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should proceed to checkout",
              "fullTitle": "Checkout Process should proceed to checkout",
              "timedOut": false,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventoryPage.openCart();\nawait cartPage.proceedToCheckout();\nconst url = await driver.getCurrentUrl();\nassert.include(url, 'checkout-step-one.html');",
              "err": {},
              "uuid": "6710a8d4-91ca-46fd-9fda-ab72f9c628a0",
              "parentUUID": "9b2ab84a-4e52-4ea4-8456-cdb72369d3ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef2c1bfc-7fad-4836-a7ed-4e51af593a19",
            "6710a8d4-91ca-46fd-9fda-ab72f9c628a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 372,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "7558d220-9cb4-4362-94d5-af2692030fdf",
          "title": "SauceDemo Login Tests",
          "fullFile": "C:\\Users\\DELL\\Downloads\\sof\\test\\specs\\login.test.js",
          "file": "\\test\\specs\\login.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"SauceDemo Login Tests\"",
              "fullTitle": "SauceDemo Login Tests \"before all\" hook in \"SauceDemo Login Tests\"",
              "timedOut": false,
              "duration": 1083,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await getDriver();\nloginPage = new LoginPage(driver);",
              "err": {},
              "uuid": "f9cdd538-89ea-4d64-b520-c69abe5ccb30",
              "parentUUID": "7558d220-9cb4-4362-94d5-af2692030fdf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"SauceDemo Login Tests\"",
              "fullTitle": "SauceDemo Login Tests \"after all\" hook in \"SauceDemo Login Tests\"",
              "timedOut": false,
              "duration": 55,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "866b127e-4c93-460c-8292-af05b3fb8ad3",
              "parentUUID": "7558d220-9cb4-4362-94d5-af2692030fdf",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"SauceDemo Login Tests\"",
              "fullTitle": "SauceDemo Login Tests \"after each\" hook in \"SauceDemo Login Tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.currentTest.state === 'failed') {\n  await takeScreenshot(driver, this.currentTest.title.replace(/\\s+/g, '_'));\n}",
              "err": {},
              "uuid": "23e39ea6-cabc-4b42-9ab6-9b574403bebb",
              "parentUUID": "7558d220-9cb4-4362-94d5-af2692030fdf",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should login with valid credentials",
              "fullTitle": "SauceDemo Login Tests should login with valid credentials",
              "timedOut": false,
              "duration": 1904,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.open();\nawait loginPage.login('standard_user', 'secret_sauce');\nconst url = await driver.getCurrentUrl();\nassert.include(url, 'inventory.html');",
              "err": {},
              "uuid": "079594ed-38b8-4d59-8cbb-7b3b1418d8e8",
              "parentUUID": "7558d220-9cb4-4362-94d5-af2692030fdf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error with invalid credentials",
              "fullTitle": "SauceDemo Login Tests should show error with invalid credentials",
              "timedOut": false,
              "duration": 571,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.open();\nawait loginPage.login('invalid_user', 'wrong_pass');\nconst errorText = await loginPage.getErrorMessage();\nassert.include(errorText.toLowerCase(), 'epic sadface');",
              "err": {},
              "uuid": "ea9cec33-cf1c-4e01-9750-579a30165bfe",
              "parentUUID": "7558d220-9cb4-4362-94d5-af2692030fdf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "079594ed-38b8-4d59-8cbb-7b3b1418d8e8",
            "ea9cec33-cf1c-4e01-9750-579a30165bfe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2475,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "report",
        "quiet": "true",
        "overwrite": "false",
        "html": "false",
        "json": "true"
      },
      "version": "6.2.0"
    }
  }
}