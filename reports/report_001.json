{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 2,
    "pending": 0,
    "failures": 2,
    "start": "2025-05-06T12:57:03.998Z",
    "end": "2025-05-06T12:57:14.956Z",
    "duration": 10958,
    "testsRegistered": 4,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "10e7ab6b-b347-4f53-a730-17a3c55c5952",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a3dd788a-2464-4e11-b93e-4a172ec1efed",
          "title": "Checkout Process",
          "fullFile": "C:\\Users\\DELL\\Downloads\\sof\\test\\specs\\checkout.test.js",
          "file": "\\test\\specs\\checkout.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Checkout Process\"",
              "fullTitle": "Checkout Process \"before all\" hook in \"Checkout Process\"",
              "timedOut": false,
              "duration": 4415,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await getDriver();\nloginPage = new LoginPage(driver);\ninventoryPage = new InventoryPage(driver);\ncartPage = new CartPage(driver);\nawait loginPage.open();\nawait loginPage.login('standard_user', 'secret_sauce');",
              "err": {},
              "uuid": "c66720dc-dda7-4042-8b58-bcce53bb566a",
              "parentUUID": "a3dd788a-2464-4e11-b93e-4a172ec1efed",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Checkout Process\"",
              "fullTitle": "Checkout Process \"after all\" hook in \"Checkout Process\"",
              "timedOut": false,
              "duration": 83,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "8d75c2f2-a4d4-468e-917e-318ed29fd343",
              "parentUUID": "a3dd788a-2464-4e11-b93e-4a172ec1efed",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Checkout Process\"",
              "fullTitle": "Checkout Process \"after each\" hook in \"Checkout Process\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.currentTest.state === 'failed') {\n  await takeScreenshot(driver, this.currentTest.title.replace(/\\s+/g, '_'));\n}",
              "err": {},
              "uuid": "4d5abfc2-b78e-4ce4-915b-5f1f1f2a9d76",
              "parentUUID": "a3dd788a-2464-4e11-b93e-4a172ec1efed",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should add item to cart",
              "fullTitle": "Checkout Process should add item to cart",
              "timedOut": false,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventoryPage.addFirstItemToCart();\nconst badge = await driver.findElement(By.css('.shopping_cart_badge')).getText();\nassert.equal(badge, '1');",
              "err": {},
              "uuid": "fd810ba8-58d2-4b5a-8e2b-59e402315dd9",
              "parentUUID": "a3dd788a-2464-4e11-b93e-4a172ec1efed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should proceed to checkout",
              "fullTitle": "Checkout Process should proceed to checkout",
              "timedOut": false,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventoryPage.openCart();\nawait cartPage.proceedToCheckout();\nconst url = await driver.getCurrentUrl();\nassert.include(url, 'checkout-step-one.html');",
              "err": {},
              "uuid": "32a70f72-2662-48a6-8664-e7d5e49ad20e",
              "parentUUID": "a3dd788a-2464-4e11-b93e-4a172ec1efed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd810ba8-58d2-4b5a-8e2b-59e402315dd9",
            "32a70f72-2662-48a6-8664-e7d5e49ad20e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 377,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "df7cdf7d-cf63-4931-bfa7-728a10eeafc2",
          "title": "SauceDemo Login Tests",
          "fullFile": "C:\\Users\\DELL\\Downloads\\sof\\test\\specs\\login.test.js",
          "file": "\\test\\specs\\login.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"SauceDemo Login Tests\"",
              "fullTitle": "SauceDemo Login Tests \"before all\" hook in \"SauceDemo Login Tests\"",
              "timedOut": false,
              "duration": 1405,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await getDriver();\nloginPage = new LoginPage(driver);",
              "err": {},
              "uuid": "9a5ddeae-c639-4980-a191-5304ea8ecf40",
              "parentUUID": "df7cdf7d-cf63-4931-bfa7-728a10eeafc2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"SauceDemo Login Tests\"",
              "fullTitle": "SauceDemo Login Tests \"after all\" hook in \"SauceDemo Login Tests\"",
              "timedOut": false,
              "duration": 66,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "a8f52666-ad2f-466d-9a4f-2ae455955efd",
              "parentUUID": "df7cdf7d-cf63-4931-bfa7-728a10eeafc2",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"SauceDemo Login Tests\"",
              "fullTitle": "SauceDemo Login Tests \"after each\" hook in \"SauceDemo Login Tests\"",
              "timedOut": false,
              "duration": 80,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.currentTest.state === 'failed') {\n  await takeScreenshot(driver, this.currentTest.title.replace(/\\s+/g, '_'));\n}",
              "err": {},
              "uuid": "243a1ce8-792a-4b35-b342-1b3e6c423195",
              "parentUUID": "df7cdf7d-cf63-4931-bfa7-728a10eeafc2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should login with valid credentials",
              "fullTitle": "SauceDemo Login Tests should login with valid credentials",
              "timedOut": true,
              "duration": 2014,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await loginPage.open();\nawait loginPage.login('standard_user', 'secret_sauce');\nconst url = await driver.getCurrentUrl();\nassert.include(url, 'inventory.html');",
              "err": {
                "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\DELL\\Downloads\\sof\\test\\specs\\login.test.js)",
                "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\DELL\\Downloads\\sof\\test\\specs\\login.test.js)\n    at listOnTimeout (node:internal/timers:608:17)\n    at process.processTimers (node:internal/timers:543:7)",
                "diff": null
              },
              "uuid": "0dc19358-1eeb-4e47-b239-c588e4f3a251",
              "parentUUID": "df7cdf7d-cf63-4931-bfa7-728a10eeafc2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error with invalid credentials",
              "fullTitle": "SauceDemo Login Tests should show error with invalid credentials",
              "timedOut": true,
              "duration": 2005,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await loginPage.open();\nawait loginPage.login('invalid_user', 'wrong_pass');\nconst errorText = await loginPage.getErrorMessage();\nassert.include(errorText.toLowerCase(), 'epic sadface');",
              "err": {
                "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\DELL\\Downloads\\sof\\test\\specs\\login.test.js)",
                "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\DELL\\Downloads\\sof\\test\\specs\\login.test.js)\n    at listOnTimeout (node:internal/timers:608:17)\n    at process.processTimers (node:internal/timers:543:7)",
                "diff": null
              },
              "uuid": "27e34814-c577-4334-9d75-8b1f3f0e4a57",
              "parentUUID": "df7cdf7d-cf63-4931-bfa7-728a10eeafc2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0dc19358-1eeb-4e47-b239-c588e4f3a251",
            "27e34814-c577-4334-9d75-8b1f3f0e4a57"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4019,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "report",
        "quiet": "true",
        "overwrite": "false",
        "html": "false",
        "json": "true"
      },
      "version": "6.2.0"
    }
  }
}